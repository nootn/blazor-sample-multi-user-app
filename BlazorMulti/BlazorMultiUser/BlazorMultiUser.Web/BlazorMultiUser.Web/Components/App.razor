@implements IDisposable
@inject NavigationManager NavigationManager

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="BlazorMultiUser.Web.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet />
</head>

<body>
    <Routes />
    <FluentDesignTheme />
    <script src="_content/Microsoft.FluentUI.AspNetCore.Components/js/loading-theme.js" type="text/javascript"></script>
    <loading-theme></loading-theme>
    <script src="_framework/blazor.web.js"></script>
    <FluentDesignTheme Mode="DesignThemeModes.System" CustomColor="@_color" />
</body>

</html>

@code {
    
    private string _color = ThemeInfo.DefaultTheme;
    
    protected override void OnInitialized()
    {
        SetThemeOnUrl(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        SetThemeOnUrl(e.Location);
    }

    private void SetThemeOnUrl(string url)
    {
        if (url.Contains("counter", StringComparison.InvariantCultureIgnoreCase))
        {
            if (_color != ThemeInfo.CounterTheme)
            {
                _color = ThemeInfo.CounterTheme;
                StateHasChanged();
            }
        }
        else
        {
            if (_color != ThemeInfo.DefaultTheme)
            {
                _color = ThemeInfo.DefaultTheme;
                StateHasChanged();
            }
        }
    }

}